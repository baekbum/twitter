{"version":3,"sources":["Database.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetForm.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","dbService","firestore","storageService","storage","authService","auth","Profile","userObj","refreshUser","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","onSubmit","event","a","preventDefault","updateProfile","className","onChange","value","target","type","autoFocus","placeholder","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","errMessage","setErrMessage","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","content","editTweet","setEditTweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","fileUrl","toggleEditting","update","src","alt","faPencilAlt","faTrash","TweetForm","tweet","setTweet","imageFile","setImageFile","fileRef","ref","child","uid","uuid","putString","fileInstance","getDownloadURL","createDt","Date","now","userId","collection","add","maxLength","htmlFor","faPlus","accept","file","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","orderBy","onSnapshot","snapshot","tweeetArray","docs","map","t","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccaacdfb.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\nexport const authService = firebase.auth();","import { authService } from 'Database';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName||'');\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push('/');\r\n    };\r\n    /* const getMyTweets = async () => {\r\n        const tweets = await dbService.collection('tweets').where('userId', '==', userObj.uid).orderBy('createDt','desc').get();\r\n        console.log(tweets.docs.map((doc) => doc.data()));\r\n    };\r\n    useEffect(() => {\r\n        getMyTweets();\r\n    }, []); */\r\n    const onChange = (event) => {\r\n        const value = event.target.value;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n           await userObj.updateProfile({\r\n               displayName : newDisplayName\r\n           });\r\n           refreshUser();\r\n        }\r\n    };\r\n    return (\r\n        <div className='container'>\r\n            <form onSubmit={onSubmit} className='profileForm'>\r\n                <input onChange={onChange} type='text' autoFocus placeholder='이름' value={newDisplayName} className='formInput' />\r\n                <input type='submit' value='업데이트' className='formBtn' style={{ marginTop: 10 }}/>\r\n            </form>\r\n            <span className='formBtn cancelBtn logOut' onClick={onLogOutClick}> Log Out </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import { authService } from 'Database';\r\nimport React, { useState } from 'react';\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [errMessage, setErrMessage] = useState('');\r\n\r\n    const onChange = (event) => {\r\n        const {target : {name, value}} = event;\r\n\r\n        if (name === 'email') {\r\n            setEmail(value);\r\n        } else if (name === 'password'){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let data;\r\n        try {\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch (error) {\r\n            setErrMessage(error.message);\r\n            console.log(errMessage);\r\n        }\r\n        \r\n    };\r\n    const toggleAccout = () => {\r\n        setNewAccount((prev) => !prev);\r\n    };\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input name='email' type='text' placeholder='Enter email' value={email} onChange={onChange} className=\"authInput\" required />\r\n                <input name='password' type='password' placeholder='Enter password' value={password} onChange={onChange} className=\"authInput\" required />\r\n                <input type='submit' value={newAccount ? 'Create Account' : 'Sign In'} className=\"authInput authSubmit\" />\r\n                { errMessage ? <span className=\"authError\">{errMessage}</span> : '' }\r\n            </form>\r\n            <span onClick={toggleAccout} className=\"authSwitch\">{newAccount ? 'Sign In' : 'Create Account'}</span>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default AuthForm;","import AuthForm from 'components/AuthForm';\r\nimport React from 'react';\r\nimport {authService, firebaseInstance} from '../Database';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter, faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Auth = () => { \r\n    const onSocialClick = async (event) => {\r\n        const name = event.target.name;\r\n        let provider;\r\n        if (name === 'google') {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === 'github') {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n\r\n        await authService.signInWithPopup(provider);\r\n    }\r\n    return (\r\n        <div className='authContainer'>\r\n            <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size='3x' style={{ marginBottom: 30 }}/>\r\n            <AuthForm />\r\n            <div className='authBtns'>\r\n                <button onClick={onSocialClick} name='google' className='authBtn'>\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name='github' className='authBtn'>\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )    \r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from 'Database';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Tweet = ({tweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [editTweet, setEditTweet] = useState(tweetObj.content);\r\n    const onDeleteClick = async () => {\r\n        const check = window.confirm('정말 삭제하시겠습니까?');\r\n        \r\n        if (check) {\r\n            await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n            await storageService.refFromURL(tweetObj.fileUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditting = () => {\r\n        setEditing((prev) => !prev);\r\n    };\r\n    const onChange = (event) => {\r\n        const value = event.target.value;\r\n        setEditTweet(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n            content : editTweet\r\n        });\r\n        setEditing(false);\r\n    };\r\n    return (\r\n        <div className=\"tweet\">\r\n            { editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container tweetEdit\">\r\n                        <input type='text' value={editTweet} onChange={onChange} className=\"formInput\" autoFocus required/>\r\n                        <input type='submit' value='수정' className=\"formBtn\"/>\r\n                    </form>\r\n                    <button onClick={toggleEditting} className=\"formBtn cancelBtn\">취소</button>\r\n                </>\r\n            ) : (\r\n                    <>\r\n                        <h4>{tweetObj.content}</h4>\r\n                        { tweetObj.fileUrl ? <img src={tweetObj.fileUrl} alt='이미지' /> : ''}\r\n                        { isOwner ?\r\n                            <div className=\"tweet__actions\">\r\n                                <span onClick={toggleEditting}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>                                \r\n                            </div> \r\n                        : ''}\r\n                    </>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Tweet;","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { dbService, storageService } from 'Database';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst TweetForm = ({userObj}) => {\r\n    const [tweet, setTweet] = useState('');\r\n    const [imageFile, setImageFile] = useState('');\r\n    const onSubmit = async (event) => {\r\n        if (tweet === '') {\r\n            return;\r\n        }\r\n\r\n        event.preventDefault();\r\n        let fileUrl = '';\r\n        if (imageFile) {\r\n            const fileRef = storageService.ref().child(`${userObj.uid}/${uuid()}`);\r\n            const fileInstance = await fileRef.putString(imageFile, 'data_url');\r\n            fileUrl = await fileInstance.ref.getDownloadURL();\r\n        }\r\n        const tweetObj = {\r\n            content : tweet,\r\n            createDt : Date.now(),\r\n            userId : userObj.uid,\r\n            fileUrl : fileUrl\r\n        } \r\n\r\n        await dbService.collection('tweets').add(tweetObj);\r\n        setTweet('');\r\n    };\r\n    const onChange = (event) => {\r\n        const value = event.target.value;\r\n        setTweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const files = event.target.files;\r\n        const file = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const result = finishedEvent.currentTarget.result;\r\n            setImageFile(result);\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n    const onClearImage = () => {\r\n        setImageFile('');\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className='tweetForm'>\r\n                <div className='tweetInput__container'>\r\n                    <input type='text' placeholder='내용을 입력해주세요.' maxLength={120} value={tweet} onChange={onChange} className='tweetInput__input'/>\r\n                    <input type='submit' value='&rarr;' className='tweetInput__arrow'/>\r\n                </div>\r\n                <label htmlFor='attach-file' className='tweetInput__label'>\r\n                    <span>사진 첨부</span>\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                </label>\r\n                <input type='file' id='attach-file' accept='image/*' onChange={onFileChange} style={{opacity: 0}} />\r\n                { imageFile ? (\r\n                    <div className='tweetForm__file'>\r\n                        <img src={imageFile} style={{ backgroundImage: imageFile}} alt='이미지' />\r\n                        <div className='tweetForm__clear' onClick={onClearImage}>\r\n                            <span>Remove</span>\r\n                            <FontAwesomeIcon icon={faTimes} />\r\n                        </div>\r\n                    </div>\r\n                ) : '' }\r\n            </form>\r\n        </>   \r\n    )\r\n};\r\n\r\nexport default TweetForm;","import Tweet from 'components/Tweet';\r\nimport TweetForm from 'components/TweetForm';\r\nimport { dbService } from 'Database';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst Home = ({userObj}) => {\r\n    const [tweets, setTweets] = useState([]);\r\n    /* const getTweets = async () => {\r\n       const getDatas = await dbService.collection('tweets').get();\r\n       getDatas.forEach((doc) => {\r\n           const tweetObj = {\r\n               ...doc.data(),\r\n               id: doc.id\r\n           };\r\n            setTweets((prev) => [tweetObj, ...prev]);\r\n       });\r\n    } */\r\n    useEffect(() => {\r\n        //getTweets();\r\n        dbService.collection('tweets').orderBy('createDt','desc').onSnapshot((snapshot) => {\r\n            const tweeetArray = snapshot.docs.map((doc) => ({\r\n                ...doc.data(),\r\n                id : doc.id\r\n            }));\r\n            setTweets(tweeetArray);\r\n        })\r\n    }, []);\r\n    return (\r\n        <div className='container'>\r\n            <TweetForm userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {tweets.map((t) => <Tweet key={t.id} tweetObj={t} isOwner={t.userId === userObj.uid ? true : false} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\r\n                <li>\r\n                    <Link to='/' style={{ marginRight: 10 }}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size='2x' />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/profile' style={{ marginLeft: 10, display: 'flex', flexDirection: 'column', alignItems: 'center', fontSize: 12 }}>\r\n                        <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size='2x' />\r\n                            <span style={{ marginTop: 10 }}>\r\n                                {userObj.displayName ? `${userObj.displayName}의 Profile` : 'Profile'}\r\n                            </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Profile from 'routes/Profile';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Navigation from './Navigation';\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn ? <Navigation userObj={userObj} /> : ''}\r\n            <Switch>\r\n                <>\r\n                    {isLoggedIn ? ( \r\n                        <div style={{ maxWidth: 890, width: '100%', margin: '0 auto', marginTop: 80, display: 'flex', justifyContent: 'center' }}>\r\n                            <Route exact path='/'>\r\n                                    <Home userObj={userObj} />\r\n                                </Route>\r\n                                <Route exact path='/profile'>\r\n                                    <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                                </Route>\r\n                        </div>\r\n                        ) : ( <Route exact path='/'>\r\n                                <Auth />\r\n                            </Route> \r\n                        )\r\n                    }\r\n                </>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from './Router';\nimport {authService} from '../Database';\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid : user.uid,\n          displayName : user.displayName,\n          updateProfile : (args) => user.updateProfile(args)\n        });\n        setIsLoggedIn(true);        \n      } else {\n        setUserObj(null);\n        setIsLoggedIn(false);        \n      }\n      setInit(true);\n    })\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid : user.uid,\n      displayName : user.displayName,\n      updateProfile : (args) => user.updateProfile(args)\n    });\n  };\n  return (\n    <>\n      { init ? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} refreshUser={refreshUser}/> : 'initializing...' }\n    </>    \n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './css/styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}