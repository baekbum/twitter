{"version":3,"sources":["Database.js","components/Auth/AuthModal.js","components/Auth/AuthForm.js","routes/Auth.js","components/ProfileModal.js","components/Header.js","components/Tweets.js","components/TweetList.js","routes/Home.js","components/Router.js","image/default.png","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","dbService","firestore","storageService","storage","authService","auth","AuthModal","useState","show","setShow","email","setEmail","password","setPassword","errMessage","setErrMessage","onHandleModal","onChange","event","target","name","value","onSignUp","a","createUserWithEmailAndPassword","data","alert","console","log","message","Button","variant","style","width","marginTop","onClick","bind","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","type","placeholder","Text","className","Footer","AuthForm","onSignIn","signInWithEmailAndPassword","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faGoogle","faGithub","Auth","display","flexDirection","faTwitter","color","size","marginBottom","ProfileModal","userObj","refreshUser","editMode","setEditMode","setName","phoneNumber","setPhoneNumber","imageFile","setImageFile","imageName","setImageName","onFileChange","files","file","refFromURL","photoURL","delete","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","onEdit","fileUrl","fileRef","ref","child","uid","uuid","putString","fileInstance","getDownloadURL","updateProfile","displayName","onClearImage","Image","src","height","cursor","roundedCircle","alignItems","prev","marginLeft","paddingBottom","justifyContent","fontSize","paddingTop","borderTop","borderBottom","defaultValue","File","id","label","accept","custom","history","useHistory","backgroundColor","marginRight","faSignOutAlt","signOut","push","Tweets","text","setText","onTweet","tweetObj","content","createDt","Date","now","userId","userName","collection","add","as","rows","rounded","borderRadius","TweetList","isOwner","onDelete","window","confirm","doc","Card","Home","tweets","setTweets","tweetWrite","setTweetWrite","useEffect","orderBy","onSnapshot","snapshot","tweeetArray","docs","map","faHome","faPen","overflow","overflowX","t","AppRouter","isLoggedIn","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","userData","providerData","defaultImage","args","currentUser","ReactDOM","render","document","getElementById"],"mappings":"gRAcAA,IAASC,cATc,CACnBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAKJ,IAAMM,EAAmBT,IACnBU,EAAYV,IAASW,YACrBC,EAAiBZ,IAASa,UAC1BC,EAAcd,IAASe,O,wCCkDrBC,EAjEG,WAAO,IAAD,EACIC,oBAAS,GADb,mBACbC,EADa,KACPC,EADO,OAEMF,mBAAS,IAFf,mBAEbG,EAFa,KAENC,EAFM,OAGYJ,mBAAS,IAHrB,mBAGbK,EAHa,KAGHC,EAHG,OAIgBN,mBAAS,IAJzB,mBAIbO,EAJa,KAIDC,EAJC,KAKdC,EAAgB,SAACR,GACnBC,EAAQD,IAENS,EAAW,SAACC,GAAW,IAAD,EACSA,EAA1BC,OAAUC,EADO,EACPA,KAAMC,EADC,EACDA,MAEV,UAATD,EACAT,EAASU,GACO,aAATD,GACPP,EAAYQ,IAGdC,EAAQ,uCAAG,4BAAAC,EAAA,+EAGInB,EAAYoB,+BAA+Bd,EAAOE,GAHtD,OAGTa,EAHS,OAKTC,MAAM,+CACNC,QAAQC,IAAIH,GANH,gDAQTV,EAAc,KAAMc,SACpBF,QAAQC,IAAId,GATH,yDAAH,qDAYd,OACE,qCACE,cAACgB,EAAA,EAAD,CAAQC,QAAQ,oBAAoBC,MAAO,CAAEC,MAAO,OAAQC,UAAW,OAAQC,QAASnB,EAAcoB,KAAK,GAAM,GAAjH,sCAIA,eAACC,EAAA,EAAD,CAAO7B,KAAMA,EAAM8B,OAAQtB,EAAcoB,KAAK,GAAM,GAAQG,SAAS,SAASC,UAAU,EAAxF,UACI,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,EAAA,EAAMM,MAAP,yCAEJ,cAACN,EAAA,EAAMO,KAAP,UACI,eAACC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CAAc7B,KAAK,QAAQ8B,KAAK,QAAQC,YAAY,cAAclC,SAAUA,OAEhF,eAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,6BACA,cAACH,EAAA,EAAKI,QAAN,CAAc7B,KAAK,WAAW8B,KAAK,WAAWC,YAAY,iBAAiBlC,SAAUA,OAEzF,cAAC4B,EAAA,EAAKO,KAAN,CAAWC,UAAU,aAArB,SACMvC,EAAa,CAACA,cAAc,UAI1C,eAACuB,EAAA,EAAMiB,OAAP,WACI,cAACxB,EAAA,EAAD,CAAQC,QAAQ,UAAUI,QAASb,EAAnC,sCACA,cAACQ,EAAA,EAAD,CAAQC,QAAQ,YAAYI,QAASnB,EAAcoB,KAAK,GAAM,GAA9D,oC,gBCgBDmB,G,MApEE,WAAO,IAAD,EACOhD,mBAAS,IADhB,mBACZG,EADY,KACLC,EADK,OAEaJ,mBAAS,IAFtB,mBAEZK,EAFY,KAEFC,EAFE,OAGiBN,mBAAS,IAH1B,mBAGZO,EAHY,KAGAC,EAHA,KAKbE,EAAW,SAACC,GAAW,IAAD,EACSA,EAA1BC,OAAUC,EADO,EACPA,KAAMC,EADC,EACDA,MAEV,UAATD,EACAT,EAASU,GACO,aAATD,GACPP,EAAYQ,IAGdmC,EAAQ,uCAAG,4BAAAjC,EAAA,+EAGInB,EAAYqD,2BAA2B/C,EAAOE,GAHlD,OAGTa,EAHS,OAKTE,QAAQC,IAAIH,GALH,gDAOTV,EAAc,KAAMc,SACpBF,QAAQC,IAAId,GARH,yDAAH,qDAWR4C,EAAa,uCAAG,WAAOxC,GAAP,iBAAAK,EAAA,4DAIL,YAHPH,EAAOF,EAAMC,OAAOC,MAItBuC,EAAW,IAAI5D,EAAiBM,KAAKuD,mBACrB,WAATxC,IACPuC,EAAW,IAAI5D,EAAiBM,KAAKwD,oBAPvB,SAUZzD,EAAY0D,gBAAgBH,GAVhB,2CAAH,sDAYnB,OACI,qCACI,eAACd,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKI,QAAN,CAAc7B,KAAK,QAAQ8B,KAAK,QAAQC,YAAY,cAAclC,SAAUA,OAEhF,eAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAc7B,KAAK,WAAW8B,KAAK,WAAWC,YAAY,WAAWlC,SAAUA,OAEnF,cAAC4B,EAAA,EAAKO,KAAN,CAAWC,UAAU,aAArB,SACMvC,EAAa,CAACA,cAAc,KAElC,cAACgB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,MAAO,CAAEC,MAAO,QAASE,QAASqB,EAA5D,mCAIJ,sBAAKH,UAAU,YAAf,UACI,eAACvB,EAAA,EAAD,CAAQC,QAAQ,oBAAoBX,KAAK,SAASY,MAAO,CAAEC,MAAO,QAASE,QAASuB,EAApF,kCACyB,cAAC,IAAD,CAAiBK,KAAMC,SAEhD,eAAClC,EAAA,EAAD,CAAQC,QAAQ,oBAAoBX,KAAK,SAASY,MAAO,CAAEC,MAAO,QAASE,QAASuB,EAApF,kCACyB,cAAC,IAAD,CAAiBK,KAAME,YAGpD,cAAC,EAAD,SCjDGC,G,MAhBF,WACT,OACI,qBAAKb,UAAU,iBAAf,SACI,sBAAKrB,MAAO,CAAEC,MAAO,OAAQkC,QAAS,OAAQC,cAAe,UAA7D,UACI,qBAAKf,UAAU,oBAAf,SACI,cAAC,IAAD,CAAiBU,KAAMM,IAAWC,MAAO,UAAWC,KAAK,KAAKvC,MAAO,CAAEwC,aAAc,WAEzF,qBAAKnB,UAAU,kBAAf,SACI,wDAEJ,cAAC,EAAD,W,iCC6GDoB,EAxHM,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,YAAiB,EACrBpE,oBAAS,GADY,mBACtCC,EADsC,KAChCC,EADgC,OAEbF,oBAAS,GAFI,mBAEtCqE,EAFsC,KAE5BC,EAF4B,OAGrBtE,mBAAS,IAHY,mBAGtCa,EAHsC,KAGhC0D,EAHgC,OAIPvE,mBAAS,IAJF,mBAItCwE,EAJsC,KAIzBC,EAJyB,OAKXzE,mBAAS,IALE,mBAKtC0E,EALsC,KAK3BC,EAL2B,OAMX3E,mBAAS,IANE,mBAMtC4E,EANsC,KAM3BC,EAN2B,KAQvCnE,EAAW,SAACC,GAAW,IAAD,EACSA,EAA1BC,OAAUC,EADO,EACPA,KAAMC,EADC,EACDA,MAEV,SAATD,EACA0D,EAAQzD,GACQ,gBAATD,GACP4D,EAAe3D,IAGjBgE,EAAY,uCAAG,WAAOnE,GAAP,mBAAAK,EAAA,yDACX+D,EAAQpE,EAAMC,OAAOmE,QACrBC,EAAOD,EAAM,IAFF,gCAIPpF,EAAesF,WAAWd,EAAQe,UAAUC,SAJrC,QAMPC,EAAS,IAAIC,YACZC,UAAY,SAACC,GAChB,IAAMC,EAASD,EAAcE,cAAcD,OAC3Cb,EAAaa,IAEjBX,EAAaG,EAAKnE,MAClBuE,EAAOM,cAAcV,GAZR,2CAAH,sDAeZW,EAAM,uCAAG,WAAOhF,GAAP,mBAAAK,EAAA,yDACE,KAATH,EADO,oDAKP+E,EAAUzB,EAAQe,UAElBR,EAPO,wBAQDmB,EAAUlG,EAAemG,MAAMC,MAArB,UAA8B5B,EAAQ6B,IAAtC,YAA6CC,gBARtD,SASoBJ,EAAQK,UAAUxB,EAAW,YATjD,cASDyB,EATC,iBAUSA,EAAaL,IAAIM,iBAV1B,QAUPR,EAVO,gCAaLzB,EAAQkC,cAAc,CACxBC,YAAczF,EACd2D,YAAcA,EACdU,SAAWU,IAhBJ,QAmBXxB,IAnBW,4CAAH,sDAqBNmC,EAAY,uCAAG,sBAAAvF,EAAA,6DACjB6D,EAAa,IACbF,EAAa,IAFI,SAIXR,EAAQkC,cAAc,CACxBnB,SAAW,OALE,OAQjBd,IARiB,2CAAH,qDAaZ3D,EAAgB,SAACR,IACN,IAATA,GACAqE,GAAY,GAEhBpE,EAAQD,IAEZ,OACI,qCACI,cAACuG,EAAA,EAAD,CAAOC,IAAKtC,EAAQe,SAAUzD,MAAO,CAACiF,OAAQ,MAAOhF,MAAO,MAAOiF,OAAQ,WAAY/E,QAASnB,EAAcoB,KAAK,GAAM,GAAO+E,eAAa,IAE7I,eAAC9E,EAAA,EAAD,CAAO7B,KAAMA,EAAM8B,OAAQtB,EAAcoB,KAAK,GAAM,GAAQG,SAAS,SAASC,UAAU,EAAxF,UACI,eAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAACV,MAAO,CAAEmC,QAAS,OAAQC,cAAe,MAAOgD,WAAY,UAAtF,UACI,cAAC/E,EAAA,EAAMM,MAAP,iCACA,cAACb,EAAA,EAAD,CAAQC,QAAQ,kBAAkBwC,KAAK,KAAKpC,QAhBvC,WACjB0C,GAAY,SAACwC,GAAD,OAAWA,MAewDrF,MAAO,CAAEsF,WAAY,OAAxF,yBAEJ,eAACjF,EAAA,EAAMO,KAAP,CAAYZ,MAAO,CAAEmC,QAAS,OAAQC,cAAe,UAArD,UACI,qBAAKpC,MAAO,CAACmC,QAAS,OAAQC,cAAe,SAAUmD,cAAe,OAAtE,SACI,sBAAKvF,MAAO,CAACiF,OAAQ,OAAQ9C,QAAS,OAAQC,cAAe,SAAUoD,eAAgB,SAAUJ,WAAY,UAA7G,UACI,qBAAKpF,MAAO,CAACiF,OAAQ,OAAQhF,MAAO,QAApC,SACI,cAAC8E,EAAA,EAAD,CAAOC,IAAKtC,EAAQe,SAAU0B,eAAa,EAACnF,MAAO,CAACC,MAAO,OAAQgF,OAAQ,YAE/E,sBAAMjF,MAAO,CAACyF,SAAU,OAAxB,SAAiC/C,EAAQmC,mBAG/CjC,EACE,sBAAK5C,MAAO,CAAE0F,WAAY,MAAOC,UAAW,uBAA5C,UACI,eAAC9E,EAAA,EAAD,CAAMb,MAAO,CAACuF,cAAe,MAAOK,aAAc,uBAAlD,UACI,eAAC/E,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CAAc7B,KAAK,OAAO8B,KAAK,OAAOC,YAAY,aAAalC,SAAUA,EAAU4G,aAAcnD,EAAQmC,iBAE7G,eAAChE,EAAA,EAAKC,MAAN,CAAYC,UAAU,cAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,+BACA,cAACH,EAAA,EAAKI,QAAN,CAAc7B,KAAK,cAAc8B,KAAK,OAAOC,YAAY,oBAAoBlC,SAAUA,EAAU4G,aAAcnD,EAAQK,iBAE3H,eAAClC,EAAA,EAAKC,MAAN,CAAYC,UAAU,eAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,iCACA,sBAAKhB,MAAO,CAACmC,QAAS,QAAtB,UACI,cAACtB,EAAA,EAAKiF,KAAN,CAAWC,GAAG,aAAaC,MAAsB,KAAd7C,EAAmB,qBAAuBA,EAAY8C,OAAO,UAAUC,QAAM,EAACjH,SAAUoE,IAC3H,cAACvD,EAAA,EAAD,CAAQC,QAAQ,oBAAoBI,QAAS2E,EAA7C,4BAIZ,qBAAK9E,MAAO,CAACmC,QAAS,OAAQqD,eAAgB,WAAYtF,UAAW,OAArE,SACI,cAACJ,EAAA,EAAD,CAAQC,QAAQ,UAAUI,QAAS+D,EAAnC,uBAGR,eC1FTzD,EApBA,SAAC,GAA4B,IAA3BiC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,YAChBwD,EAAUC,cAMhB,OACI,sBAAKpG,MAAO,CAACmC,QAAS,OAAQ8C,OAAQ,OAAQoB,gBAAiB,UAAWjB,WAAY,SAAUI,eAAgB,iBAAhH,UACI,qBAAKxF,MAAO,CAACsF,WAAY,OAAzB,SACI,cAAC,IAAD,CAAiBvD,KAAMM,IAAWC,MAAO,UAAWC,KAAK,SAE7D,sBAAKvC,MAAO,CAACsG,YAAa,OAA1B,UACI,cAAC,EAAD,CAAc5D,QAASA,EAASC,YAAaA,IAC7C,cAAC,IAAD,CAAiBZ,KAAMwE,IAAcjE,MAAO,UAAWC,KAAK,KAAKvC,MAAO,CAACsF,WAAY,MAAOJ,OAAQ,WAAY/E,QAZtG,WAClB/B,EAAYoI,UACZL,EAAQM,KAAK,e,QC6DNC,EApEA,SAAC,GAAe,IAAdhE,EAAa,EAAbA,QAAa,EACFnE,mBAAS,IADP,mBACnBoI,EADmB,KACbC,EADa,OAEQrI,mBAAS,IAFjB,mBAEnB0E,EAFmB,KAERC,EAFQ,OAGQ3E,mBAAS,IAHjB,mBAGnB4E,EAHmB,KAGRC,EAHQ,KAmBpB0B,EAAe,WACjB1B,EAAa,IACbF,EAAa,KAEX2D,EAAO,uCAAG,kCAAAtH,EAAA,yDACC,KAAToH,EADQ,oDAKRxC,EAAU,IACVlB,EANQ,wBAOFmB,EAAUlG,EAAemG,MAAMC,MAArB,UAA8B5B,EAAQ6B,IAAtC,YAA6CC,gBAPrD,SAQmBJ,EAAQK,UAAUxB,EAAW,YARhD,cAQFyB,EARE,iBASQA,EAAaL,IAAIM,iBATzB,QASRR,EATQ,sBAYN2C,EAAW,CACbC,QAAUJ,EACVK,SAAWC,KAAKC,MAChBC,OAASzE,EAAQ6B,IACjB6C,SAAW1E,EAAQmC,YACnBV,QAAUA,GAjBF,UAoBNnG,EAAUqJ,WAAW,UAAUC,IAAIR,GApB7B,QAqBZF,EAAQ,IACR9B,IAtBY,4CAAH,qDAwBb,OACI,mCACI,eAACjE,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,+BAAtB,UACI,cAACF,EAAA,EAAKI,QAAN,CAAcsG,GAAG,WAAWC,KAAM,GAAIxH,MAAO,CAACE,UAAW,OAAQjB,SA/C5D,SAACC,GAClB,IAAMG,EAAQH,EAAMC,OAAOE,MAC3BuH,EAAQvH,IA6C6FA,MAAOsH,IAC9F1D,EAAY,cAAC8B,EAAA,EAAD,CAAOC,IAAK/B,EAAWwE,SAAO,EAACzH,MAAO,CAACC,MAAO,OAAQC,UAAW,MAAO+E,OAAQ,UAAa,QAE/G,sBAAKjF,MAAO,CAACmC,QAAS,OAAQC,cAAe,UAA7C,UACI,8BACI,cAACvB,EAAA,EAAKiF,KAAN,CAAWC,GAAG,aAAaC,MAAsB,KAAd7C,EAAmB,YAAcA,EAAY8C,OAAO,UAAUC,QAAM,EAACjH,SAhDvG,SAACC,GAClB,IACMqE,EADQrE,EAAMC,OAAOmE,MACR,GACbK,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAChB,IAAMC,EAASD,EAAcE,cAAcD,OAC3Cb,EAAaa,IAEjBX,EAAaG,EAAKnE,MAClBuE,EAAOM,cAAcV,QAyCT,sBAAKvD,MAAO,CAACmC,QAAS,OAAQqD,eAAgB,WAAYtF,UAAW,OAArE,UACI,cAACJ,EAAA,EAAD,CAAQC,QAAQ,UAAUC,MAAO,CAAE0H,aAAc,MAAOpB,YAAa,SAAUnG,QAAS2E,EAAxF,yBACA,cAAChF,EAAA,EAAD,CAAQC,QAAQ,UAAUC,MAAO,CAAE0H,aAAc,OAAQvH,QAAS0G,EAAlE,+B,QC9BTc,EA/BG,SAAC,GAAyB,IAAxBb,EAAuB,EAAvBA,SAAUc,EAAa,EAAbA,QACpBC,EAAQ,uCAAG,sBAAAtI,EAAA,0DACCuI,OAAOC,QAAQ,kEADhB,gCAIH/J,EAAUgK,IAAV,iBAAwBlB,EAASf,KAAMrC,SAJpC,uBAKHxF,EAAesF,WAAWsD,EAAS3C,SAAST,SALzC,2CAAH,qDAQd,OACI,eAACuE,EAAA,EAAD,CAAMjI,MAAO,CAACwC,aAAc,OAA5B,UACI,cAACyF,EAAA,EAAKxH,OAAN,UACKqG,EAASM,WAEd,eAACa,EAAA,EAAKrH,KAAN,WACI,cAACqH,EAAA,EAAK7G,KAAN,UACK0F,EAASC,UAEZD,EAAS3C,QAAU,cAACY,EAAA,EAAD,CAAOC,IAAK8B,EAAS3C,QAASsD,SAAO,EAACzH,MAAO,CAACC,MAAO,OAAQC,UAAW,SAAY,QAE3G0H,EACE,cAACK,EAAA,EAAK3G,OAAN,CAAaD,UAAU,aAAarB,MAAO,CAACmC,QAAS,OAAQC,cAAe,MAAOoD,eAAgB,YAAnG,SACI,cAAC1F,EAAA,EAAD,CAAQC,QAAQ,iBAAiBwC,KAAK,KAAKvC,MAAO,CAAE0H,aAAc,OAAQvH,QAAS0H,EAAnF,sBAGJ,SCoCDK,G,MAxDF,SAAC,GAAe,IAAdxF,EAAa,EAAbA,QAAa,EACInE,mBAAS,IADb,mBACjB4J,EADiB,KACTC,EADS,OAEY7J,oBAAS,GAFrB,mBAEjB8J,EAFiB,KAELC,EAFK,KAiBxB,OAVAC,qBAAU,WACNvK,EAAUqJ,WAAW,UAAUmB,QAAQ,WAAW,QAAQC,YAAW,SAACC,GAClE,IAAMC,EAAcD,EAASE,KAAKC,KAAI,SAACb,GAAD,mBAAC,eAChCA,EAAIvI,QAD2B,IAElCsG,GAAKiC,EAAIjC,QAEbqC,EAAUO,QAEf,IAGC,sBAAKtH,UAAU,iBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,sBAAKrB,MAAO,CAACiF,OAAQ,MAAOoB,gBAAiB,UAAWlE,QAAS,OAAQiD,WAAY,SAAUI,eAAgB,iBAA/G,UACI,gCACI,cAAC,IAAD,CAAiBzD,KAAM+G,IAAQxG,MAAO,UAAWC,KAAK,KAAKvC,MAAO,CAACsF,WAAY,SAC/E,sBAAMtF,MAAO,CAACsC,MAAO,QAASgD,WAAY,SAA1C,yBAEJ,cAAC,IAAD,CAAiBvD,KAAMgH,IAAOzG,MAAO,UAAWC,KAAK,KAAKvC,MAAO,CAACkF,OAAQ,UAAWoB,YAAa,OAAQnG,QAtBtG,WAChBmI,GAAc,SAACjD,GAAD,OAAWA,WAuBjB,qBAAKrF,MAAO,CAAEE,UAAW,MAAOiC,QAAS,OAAQC,cAAe,SAAU6C,OAAQ,OAAQ+D,SAAU,SAAUC,UAAW,UAAzH,SACKd,EAAOU,KAAI,SAACK,GAAD,OAAO,cAAC,EAAD,CAAsBpC,SAAUoC,EAAGtB,QAASsB,EAAE/B,SAAWzE,EAAQ6B,KAAjD2E,EAAEnD,YAG3CsC,EACE,sBAAKhH,UAAU,QAAf,UACI,qBAAKrB,MAAO,CAACiF,OAAQ,MAAOoB,gBAAiB,UAAWlE,QAAS,OAAQiD,WAAY,SAAUI,eAAgB,iBAA/G,SACI,gCACI,cAAC,IAAD,CAAiBzD,KAAMM,IAAWC,MAAO,UAAWC,KAAK,KAAKvC,MAAO,CAACsF,WAAY,SAClF,sBAAMtF,MAAO,CAACsC,MAAO,QAASgD,WAAY,SAA1C,wBAGR,cAAC,EAAD,CAAQ5C,QAASA,OAErB,KACJ,qBAAKrB,UAAU,eAAerB,MAAO,CAACmC,QAAS,QAA/C,gBAGA,qBAAKd,UAAU,UAAUrB,MAAO,CAACmC,QAAS,QAA1C,2BCrBGgH,EA3BG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,WAAY1G,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YACtC,OACI,eAAC,IAAD,WACKyG,EACG,qBAAKpJ,MAAO,CAACC,MAAO,QAASgF,OAAQ,OAArC,SACI,cAAC,EAAD,CAAQvC,QAASA,EAASC,YAAaA,MAEzC,KACN,cAAC,IAAD,UACI,mCACKyG,EACG,qBAAKpJ,MAAO,CAAEmC,QAAS,OAAQqD,eAAgB,SAAUP,OAAQ,OAAQhF,MAAO,QAASC,UAAW,MAAOsC,aAAc,OAAzH,SACI,cAAC,IAAD,CAAO6G,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAM5G,QAASA,QAGjB,cAAC,IAAD,CAAO2G,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,cCvBjB,MAA0B,oCC4D1BC,MAvDf,WAAgB,IAAD,EACWhL,oBAAS,GADpB,mBACNiL,EADM,KACAC,EADA,OAEuBlL,oBAAS,GAFhC,mBAEN6K,EAFM,KAEMM,EAFN,OAGiBnL,mBAAS,MAH1B,mBAGNmE,EAHM,KAGGiH,EAHH,KAgDb,OAhCApB,qBAAU,WACRnK,EAAYwL,oBAAmB,SAACC,GAC9B,GAAIA,EAAM,CACR,IAAMC,EAAWD,EAAKE,aAAa,GACnCJ,EAAW,CACTpF,IAAMsF,EAAKtF,IACXM,YAAciF,EAASjF,YACvBnG,MAAQoL,EAASpL,MACjBqE,YAAc+G,EAAS/G,YACvBU,SAAWqG,EAASrG,UAAUuG,EAC9BpF,cAAgB,SAACqF,GAAD,OAAUJ,EAAKjF,cAAcqF,MAE/CP,GAAc,QAdlBC,EARY,CACVpF,IAAM,GACNM,YAAc,GACdnG,MAAQ,GACRqE,YAAc,GACdU,SAAW,GACXmB,cAAgB,OAmBd8E,GAAc,GAEhBD,GAAQ,QAET,IAcD,mCACID,EAAO,cAAC,EAAD,CAAWJ,WAAYA,EAAY1G,QAASA,EAASC,YAd9C,WAClB,IAAMkH,EAAOzL,EAAY8L,YACnBJ,EAAWD,EAAKE,aAAa,GACnCJ,EAAW,CACTpF,IAAMsF,EAAKtF,IACXM,YAAciF,EAASjF,YACvBnG,MAAQoL,EAASpL,MACjBqE,YAAc+G,EAAS/G,YACvBU,SAAWqG,EAASrG,UAAUuG,EAC9BpF,cAAgB,SAACqF,GAAD,OAAUJ,EAAKjF,cAAcqF,SAK+C,qB,MClDlGE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.15eccee7.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\nexport const authService = firebase.auth();","import { authService } from 'Database';\r\nimport React, { useState } from 'react';\r\nimport { Form, Button, Modal } from 'react-bootstrap';\r\n\r\nconst AuthModal = () => {\r\n    const [show, setShow] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errMessage, setErrMessage] = useState('');\r\n    const onHandleModal = (show) => {\r\n        setShow(show);\r\n    };\r\n    const onChange = (event) => {\r\n        const {target : {name, value}} = event;\r\n\r\n        if (name === 'email') {\r\n            setEmail(value);\r\n        } else if (name === 'password'){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSignUp = async () => {\r\n        let data;        \r\n        try {\r\n            data = await authService.createUserWithEmailAndPassword(email, password);\r\n            \r\n            alert('가입되었습니다.');\r\n            console.log(data);\r\n        } catch (error) {\r\n            setErrMessage(error.message);\r\n            console.log(errMessage);\r\n        }\r\n    };\r\n    return (\r\n      <>\r\n        <Button variant=\"outline-secondary\" style={{ width: '100%', marginTop: '2vh'}} onClick={onHandleModal.bind(this, true)}>\r\n            가입하기\r\n        </Button>\r\n  \r\n        <Modal show={show} onHide={onHandleModal.bind(this, false)} backdrop=\"static\" keyboard={false}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>회원가입</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Enter Email</Form.Label>\r\n                        <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" onChange={onChange} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Enter Password</Form.Label>\r\n                        <Form.Control name=\"password\" type=\"password\" placeholder=\"Enter password\" onChange={onChange} />\r\n                    </Form.Group>\r\n                    <Form.Text className=\"text-muted\">\r\n                        { errMessage ? {errMessage} : '' }\r\n                    </Form.Text>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={onSignUp}>가입하기</Button>\r\n                <Button variant=\"secondary\" onClick={onHandleModal.bind(this, false)}>\r\n                    닫기\r\n                </Button>            \r\n            </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default AuthModal;","import {authService, firebaseInstance} from '../../Database';\r\nimport React, { useState } from 'react';\r\nimport AuthModal from './AuthModal';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport '../../css/Auth/AuthForm.css';\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errMessage, setErrMessage] = useState('');\r\n\r\n    const onChange = (event) => {\r\n        const {target : {name, value}} = event;\r\n\r\n        if (name === 'email') {\r\n            setEmail(value);\r\n        } else if (name === 'password'){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSignIn = async () => {\r\n        let data;        \r\n        try {\r\n            data = await authService.signInWithEmailAndPassword(email, password);\r\n            \r\n            console.log(data);\r\n        } catch (error) {\r\n            setErrMessage(error.message);\r\n            console.log(errMessage);\r\n        }\r\n    };\r\n    const onSocialClick = async (event) => {\r\n        const name = event.target.name;\r\n        let provider;\r\n\r\n        if (name === 'google') {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === 'github') {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n\r\n        await authService.signInWithPopup(provider);\r\n    }\r\n    return (\r\n        <>\r\n            <Form>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" onChange={onChange} />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" onChange={onChange} />\r\n                </Form.Group>\r\n                <Form.Text className=\"text-muted\">\r\n                    { errMessage ? {errMessage} : '' }\r\n                </Form.Text>\r\n                <Button variant=\"primary\" style={{ width: '100%'}} onClick={onSignIn} >\r\n                    로그인\r\n                </Button>\r\n            </Form>\r\n            <div className='auth-btns'>\r\n                <Button variant=\"outline-secondary\" name=\"google\" style={{ width: '100%'}} onClick={onSocialClick}>\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </Button>\r\n                <Button variant=\"outline-secondary\" name=\"github\" style={{ width: '100%'}} onClick={onSocialClick}>\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </Button>\r\n            </div>\r\n            <AuthModal />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default AuthForm;","import AuthForm from 'components/Auth/AuthForm';\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport '../css/Auth/Auth.css';\r\n\r\nconst Auth = () => { \r\n    return (\r\n        <div className='auth-container'>\r\n            <div style={{ width: '25vw', display: 'flex', flexDirection: 'column'}}>\r\n                <div className='auth-twitter-icon'>\r\n                    <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size='3x' style={{ marginBottom: '3vh' }}/>\r\n                </div>\r\n                <div className='auth-login-span'>\r\n                    <span>로그인</span>\r\n                </div>\r\n                <AuthForm />\r\n            </div>\r\n        </div>\r\n    )    \r\n};\r\n\r\nexport default Auth;","import React, { useState } from 'react';\r\nimport { Button, Form, Image, Modal } from 'react-bootstrap';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { storageService } from 'Database';\r\n\r\nconst ProfileModal = ({userObj, refreshUser}) => {\r\n    const [show, setShow] = useState(false);\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [imageFile, setImageFile] = useState('');\r\n    const [imageName, setImageName] = useState('');\r\n\r\n    const onChange = (event) => {\r\n        const {target : {name, value}} = event;\r\n\r\n        if (name === 'name') {\r\n            setName(value);\r\n        } else if (name === 'phoneNumber'){\r\n            setPhoneNumber(value);\r\n        }\r\n    };\r\n    const onFileChange = async (event) => {\r\n        const files = event.target.files;\r\n        const file = files[0];\r\n        if (file) {\r\n            await storageService.refFromURL(userObj.photoURL).delete();\r\n\r\n            const reader = new FileReader();\r\n            reader.onloadend = (finishedEvent) => {\r\n                const result = finishedEvent.currentTarget.result;\r\n                setImageFile(result);\r\n            }\r\n            setImageName(file.name);\r\n            reader.readAsDataURL(file);\r\n        }        \r\n    };\r\n    const onEdit = async (event) => {\r\n        if (name === '') {\r\n            return;\r\n        }\r\n\r\n        let fileUrl = userObj.photoURL;\r\n        \r\n        if (imageFile) {\r\n            const fileRef = storageService.ref().child(`${userObj.uid}/${uuid()}`);\r\n            const fileInstance = await fileRef.putString(imageFile, 'data_url');\r\n            fileUrl = await fileInstance.ref.getDownloadURL();\r\n        }\r\n\r\n        await userObj.updateProfile({\r\n            displayName : name,\r\n            phoneNumber : phoneNumber,\r\n            photoURL : fileUrl\r\n        });\r\n\r\n        refreshUser();\r\n    };\r\n    const onClearImage = async () => {\r\n        setImageName('');\r\n        setImageFile('');\r\n\r\n        await userObj.updateProfile({\r\n            photoURL : null\r\n        });\r\n\r\n        refreshUser();\r\n    };\r\n    const onToggleEdit = () => {\r\n        setEditMode((prev) => !prev);\r\n    };\r\n    const onHandleModal = (show) => {\r\n        if (show === false) {\r\n            setEditMode(false);\r\n        }\r\n        setShow(show);\r\n    };\r\n    return (\r\n        <>  \r\n            <Image src={userObj.photoURL} style={{height: '4vh', width: '4vh', cursor: 'pointer'}} onClick={onHandleModal.bind(this, true)} roundedCircle />            \r\n\r\n            <Modal show={show} onHide={onHandleModal.bind(this, false)} backdrop=\"static\" keyboard={false}>\r\n                <Modal.Header closeButton style={{ display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n                    <Modal.Title>프로필</Modal.Title>\r\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={onToggleEdit} style={{ marginLeft: '1vw'}}>EditMode</Button>    \r\n                </Modal.Header>\r\n                <Modal.Body style={{ display: 'flex', flexDirection: 'column' }}>\r\n                    <div style={{display: 'flex', flexDirection: 'column', paddingBottom: '1vh'}}>\r\n                        <div style={{height: '35vh', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n                            <div style={{height: '20vh', width: '20vh'}}>\r\n                                <Image src={userObj.photoURL} roundedCircle style={{width: '100%', height: '100%'}}/>\r\n                            </div>                            \r\n                            <span style={{fontSize: '2em'}}>{userObj.displayName}</span>\r\n                        </div>\r\n                    </div>\r\n                    { editMode ? (\r\n                        <div style={{ paddingTop: '1vh', borderTop: '0.5vh solid #dee2e6'}}>\r\n                            <Form style={{paddingBottom: '1vh', borderBottom: '0.5vh solid #dee2e6'}}>\r\n                                <Form.Group controlId=\"name\">\r\n                                    <Form.Label>Edit name</Form.Label>\r\n                                    <Form.Control name=\"name\" type=\"text\" placeholder=\"Enter name\" onChange={onChange} defaultValue={userObj.displayName} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"phoneNumber\">\r\n                                    <Form.Label>Edit phoneNumber</Form.Label>\r\n                                    <Form.Control name=\"phoneNumber\" type=\"text\" placeholder=\"Enter phoneNumber\" onChange={onChange} defaultValue={userObj.phoneNumber} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"profileImage\">\r\n                                    <Form.Label>Edit profile image</Form.Label>\r\n                                    <div style={{display: 'flex'}}>\r\n                                        <Form.File id=\"image-file\" label={ imageName === '' ? 'Edit profile image' : imageName } accept='image/*' custom onChange={onFileChange} />\r\n                                        <Button variant=\"outline-secondary\" onClick={onClearImage}>Clear</Button>\r\n                                    </div>                                    \r\n                                </Form.Group>                                \r\n                            </Form>\r\n                            <div style={{display: 'flex', justifyContent: 'flex-end', marginTop: '1vh'}}>\r\n                                <Button variant=\"primary\" onClick={onEdit}>Edit</Button>\r\n                            </div> \r\n                        </div>\r\n                    ) : null }\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProfileModal;","import React from \"react\";\r\nimport { useHistory } from 'react-router';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport { authService } from \"Database\";\r\n\r\nconst Header = ({userObj, refreshUser}) => {\r\n    const history = useHistory();\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push('/');\r\n    };\r\n\r\n    return (\r\n        <nav style={{display: \"flex\", height: '100%', backgroundColor: '#1c2938', alignItems: 'center', justifyContent: 'space-between'}}>\r\n            <div style={{marginLeft: '1vw'}}>\r\n                <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size='2x' />\r\n            </div>\r\n            <div style={{marginRight: '1vw'}}>\r\n                <ProfileModal userObj={userObj} refreshUser={refreshUser} />\r\n                <FontAwesomeIcon icon={faSignOutAlt} color={'#04AAFF'} size='lg' style={{marginLeft: '1vw', cursor: 'pointer'}} onClick={onLogOutClick} />\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Header;","import { dbService, storageService } from 'Database';\r\nimport React, { useState } from 'react';\r\nimport { Form, Button, Image } from 'react-bootstrap';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst Tweets = ({userObj}) => {\r\n    const [text, setText] = useState('');\r\n    const [imageFile, setImageFile] = useState('');\r\n    const [imageName, setImageName] = useState('');\r\n    const onTextChange = (event) => {\r\n        const value = event.target.value;\r\n        setText(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const files = event.target.files;\r\n        const file = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const result = finishedEvent.currentTarget.result;\r\n            setImageFile(result);\r\n        }\r\n        setImageName(file.name);\r\n        reader.readAsDataURL(file);\r\n    };\r\n    const onClearImage = () => {\r\n        setImageName('');\r\n        setImageFile('');\r\n    };\r\n    const onTweet = async () => {\r\n        if (text === '') {\r\n            return;\r\n        }\r\n\r\n        let fileUrl = '';\r\n        if (imageFile) {\r\n            const fileRef = storageService.ref().child(`${userObj.uid}/${uuid()}`);\r\n            const fileInstance = await fileRef.putString(imageFile, 'data_url');\r\n            fileUrl = await fileInstance.ref.getDownloadURL();\r\n        }\r\n\r\n        const tweetObj = {\r\n            content : text,\r\n            createDt : Date.now(),\r\n            userId : userObj.uid,\r\n            userName : userObj.displayName,\r\n            fileUrl : fileUrl\r\n        }\r\n\r\n        await dbService.collection('tweets').add(tweetObj);\r\n        setText('');\r\n        onClearImage();\r\n    };\r\n    return (\r\n        <>\r\n            <Form>\r\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Control as=\"textarea\" rows={10} style={{marginTop: '1vh'}} onChange={onTextChange} value={text} />\r\n                    { imageFile ? <Image src={imageFile} rounded style={{width: '100%', marginTop: '1vh', height: '39vh'}}/> : null }\r\n                </Form.Group>\r\n                <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                    <div>\r\n                        <Form.File id=\"image-file\" label={ imageName === '' ? 'Add image' : imageName } accept='image/*' custom onChange={onFileChange} />\r\n                    </div>\r\n                    <div style={{display: 'flex', justifyContent: 'flex-end', marginTop: '2vh'}}>\r\n                        <Button variant=\"primary\" style={{ borderRadius: '1em', marginRight: '0.5vw'}} onClick={onClearImage}>Image clear</Button>\r\n                        <Button variant=\"primary\" style={{ borderRadius: '1em'}} onClick={onTweet}>Tweet</Button>\r\n                    </div>                    \r\n                </div>                \r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Tweets;","import { dbService, storageService } from 'Database';\r\nimport React from 'react';\r\nimport { Card, Button, Image } from 'react-bootstrap';\r\n\r\nconst TweetList = ({tweetObj, isOwner}) => {\r\n    const onDelete = async () => {\r\n        const check = window.confirm('정말 삭제하시겠습니까?');\r\n        \r\n        if (check) {\r\n            await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n            await storageService.refFromURL(tweetObj.fileUrl).delete();\r\n        }\r\n    }\r\n    return (\r\n        <Card style={{marginBottom: '1vh'}}>\r\n            <Card.Header>\r\n                {tweetObj.userName}\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <Card.Text>\r\n                    {tweetObj.content}\r\n                </Card.Text>\r\n                { tweetObj.fileUrl ? <Image src={tweetObj.fileUrl} rounded style={{width: '100%', marginTop: '1vh'}}/> : null }\r\n            </Card.Body>\r\n            { isOwner ? (\r\n                <Card.Footer className=\"text-muted\" style={{display: 'flex', flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n                    <Button variant=\"outline-danger\" size='sm' style={{ borderRadius: '1em'}} onClick={onDelete}>Delete</Button>\r\n                </Card.Footer>\r\n            ) : (\r\n                null\r\n            )}\r\n        </Card>\r\n    )\r\n};\r\n\r\nexport default TweetList;","import Tweets from 'components/Tweets';\r\nimport TweetList from 'components/TweetList';\r\nimport { dbService } from 'Database';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faPen, faHome } from \"@fortawesome/free-solid-svg-icons\";\r\nimport '../css/Home/Home.css';\r\n\r\nconst Home = ({userObj}) => {\r\n    const [tweets, setTweets] = useState([]);\r\n    const [tweetWrite, setTweetWrite] = useState(false);\r\n    const onTweetShow = () => {\r\n        setTweetWrite((prev) => !prev);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dbService.collection('tweets').orderBy('createDt','desc').onSnapshot((snapshot) => {\r\n            const tweeetArray = snapshot.docs.map((doc) => ({\r\n                ...doc.data(),\r\n                id : doc.id\r\n            }));\r\n            setTweets(tweeetArray);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <div className='main-container'>\r\n            <div className='tweet-list'>\r\n                <div style={{height: '5vh', backgroundColor: '#1c2938', display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\r\n                    <div> \r\n                        <FontAwesomeIcon icon={faHome} color={'#04AAFF'} size='lg' style={{marginLeft: '1vw'}} />\r\n                        <span style={{color: 'white', marginLeft: '0.5vw'}}>TimeLine</span>\r\n                    </div>\r\n                    <FontAwesomeIcon icon={faPen} color={'#04AAFF'} size='1x' style={{cursor: 'pointer', marginRight: '1vw'}} onClick={onTweetShow}/>\r\n                </div>\r\n                <div style={{ marginTop: '1vh', display: 'flex', flexDirection: 'column', height: '83vh', overflow: 'scroll', overflowX: 'hidden'}}>\r\n                    {tweets.map((t) => <TweetList key={t.id} tweetObj={t} isOwner={t.userId === userObj.uid ? true : false} />)}\r\n                </div>\r\n            </div>\r\n            { tweetWrite ? (\r\n                <div className='tweet'>\r\n                    <div style={{height: '5vh', backgroundColor: '#1c2938', display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\r\n                        <div> \r\n                            <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size='lg' style={{marginLeft: '1vw'}} />\r\n                            <span style={{color: 'white', marginLeft: '0.5vw'}}>Tweet</span>\r\n                        </div>\r\n                    </div>\r\n                    <Tweets userObj={userObj} />\r\n                </div>\r\n            ) : null }            \r\n            <div className='message-list' style={{display: 'none'}}>\r\n                DM\r\n            </div>\r\n            <div className='message' style={{display: 'none'}}>\r\n                DM write\r\n            </div>\r\n            {/* <TweetForm userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {tweets.map((t) => <Tweet key={t.id} tweetObj={t} isOwner={t.userId === userObj.uid ? true : false} />)}\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from '../routes/Auth';\r\nimport Header from './Header';\r\nimport Home from '../routes/Home';\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn ? (\r\n                <div style={{width: '100vw', height: '7vh'}}>\r\n                    <Header userObj={userObj} refreshUser={refreshUser} />\r\n                </div>\r\n             )  : null}\r\n            <Switch>\r\n                <>\r\n                    {isLoggedIn ? ( \r\n                        <div style={{ display: 'flex', justifyContent: 'center', height: '91vh', width: '100vw', marginTop: '1vh', marginBottom: '1vh'}}>\r\n                            <Route exact path='/'>\r\n                                <Home userObj={userObj} />\r\n                            </Route>\r\n                        </div>\r\n                        ) : ( <Route exact path='/'>\r\n                                <Auth />\r\n                            </Route> \r\n                        )\r\n                    }\r\n                </>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n};\r\n\r\nexport default AppRouter;","export default __webpack_public_path__ + \"static/media/default.10691648.png\";","import React, { useEffect, useState } from 'react';\nimport AppRouter from './Router';\nimport {authService} from '../Database';\nimport defaultImage from '../image/default.png';\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  const initUser = () => {\n    const obj = {\n      uid : '',\n      displayName : '',\n      email : '',\n      phoneNumber : '',\n      photoURL : '',\n      updateProfile : null\n    }\n    setUserObj(obj);\n  };\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        const userData = user.providerData[0];\n        setUserObj({\n          uid : user.uid,\n          displayName : userData.displayName,\n          email : userData.email,\n          phoneNumber : userData.phoneNumber,\n          photoURL : userData.photoURL||defaultImage,\n          updateProfile : (args) => user.updateProfile(args)\n        });\n        setIsLoggedIn(true);        \n      } else {\n        initUser();\n        setIsLoggedIn(false);        \n      }\n      setInit(true);\n    })\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    const userData = user.providerData[0];\n    setUserObj({\n      uid : user.uid,\n      displayName : userData.displayName,\n      email : userData.email,\n      phoneNumber : userData.phoneNumber,\n      photoURL : userData.photoURL||defaultImage,\n      updateProfile : (args) => user.updateProfile(args)\n    });\n  };\n  return (\n    <>\n      { init ? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} refreshUser={refreshUser}/> : 'initializing...' }\n    </>    \n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}